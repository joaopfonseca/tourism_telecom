{"version":3,"sources":["../../src/webgl-utils/set-parameters.js"],"names":["GL","GL_PARAMETER_DEFAULTS","BLEND","BLEND_COLOR","Float32Array","BLEND_EQUATION_RGB","FUNC_ADD","BLEND_EQUATION_ALPHA","BLEND_SRC_RGB","ONE","BLEND_DST_RGB","ZERO","BLEND_SRC_ALPHA","BLEND_DST_ALPHA","COLOR_CLEAR_VALUE","COLOR_WRITEMASK","CULL_FACE","CULL_FACE_MODE","BACK","DEPTH_TEST","DEPTH_CLEAR_VALUE","DEPTH_FUNC","LESS","DEPTH_RANGE","DEPTH_WRITEMASK","DITHER","FRONT_FACE","CCW","GENERATE_MIPMAP_HINT","DONT_CARE","LINE_WIDTH","POLYGON_OFFSET_FILL","POLYGON_OFFSET_FACTOR","POLYGON_OFFSET_UNITS","SAMPLE_COVERAGE_VALUE","SAMPLE_COVERAGE_INVERT","SCISSOR_TEST","SCISSOR_BOX","Int32Array","STENCIL_TEST","STENCIL_CLEAR_VALUE","STENCIL_WRITEMASK","STENCIL_BACK_WRITEMASK","STENCIL_FUNC","ALWAYS","STENCIL_REF","STENCIL_VALUE_MASK","STENCIL_BACK_FUNC","STENCIL_BACK_REF","STENCIL_BACK_VALUE_MASK","STENCIL_FAIL","KEEP","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_BACK_FAIL","STENCIL_BACK_PASS_DEPTH_FAIL","STENCIL_BACK_PASS_DEPTH_PASS","VIEWPORT","PACK_ALIGNMENT","UNPACK_ALIGNMENT","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","BROWSER_DEFAULT_WEBGL","FRAGMENT_SHADER_DERIVATIVE_HINT","RASTERIZER_DISCARD","PACK_ROW_LENGTH","PACK_SKIP_PIXELS","PACK_SKIP_ROWS","UNPACK_ROW_LENGTH","UNPACK_IMAGE_HEIGHT","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","UNPACK_SKIP_IMAGES","enable","gl","value","key","disable","hint","pixelStorei","GL_PARAMETER_SETTERS","blendColor","clearColor","colorMask","cullFace","clearDepth","depthFunc","depthRange","depthMask","frontFace","lineWidth","scissor","clearStencil","stencilMaskSeparate","FRONT","viewport","GL_PARAMETER_COMPOSITE_SETTERS","blendEquation","values","blendEquationSeparate","blendFunc","blendFuncSeparate","polygonOffset","sampleCoverage","stencilFuncFront","stencilFuncSeparate","stencilFuncBack","stencilOpFront","stencilOpSeparate","stencilOpBack","isEnabled","GL_PARAMETER_GETTERS","SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_COVERAGE","setParameters","compositeSetters","setter","Number","cache","state","mergedValues","Object","assign","compositeSetter","getParameter","getter","getParameters","parameters","parameterKeys","Array","isArray","keys","getDefaultParameters","resetParameters"],"mappings":"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","file":"set-parameters.js","sourcesContent":["// Provides a unified API for getting and setting any WebGL parameter\n// Also knows default values of all parameters, enabling fast cache initialization\n// Provides base functionality for the state caching.\nimport GL from './constants';\n\n// DEFAULT SETTINGS - FOR FAST CACHE INITIALIZATION AND CONTEXT RESETS\n\nexport const GL_PARAMETER_DEFAULTS = {\n  [GL.BLEND]: false,\n  [GL.BLEND_COLOR]: new Float32Array([0, 0, 0, 0]),\n  [GL.BLEND_EQUATION_RGB]: GL.FUNC_ADD,\n  [GL.BLEND_EQUATION_ALPHA]: GL.FUNC_ADD,\n  [GL.BLEND_SRC_RGB]: GL.ONE,\n  [GL.BLEND_DST_RGB]: GL.ZERO,\n  [GL.BLEND_SRC_ALPHA]: GL.ONE,\n  [GL.BLEND_DST_ALPHA]: GL.ZERO,\n  [GL.COLOR_CLEAR_VALUE]: new Float32Array([0, 0, 0, 0]), // TBD\n  [GL.COLOR_WRITEMASK]: [true, true, true, true],\n  [GL.CULL_FACE]: false,\n  [GL.CULL_FACE_MODE]: GL.BACK,\n  [GL.DEPTH_TEST]: false,\n  [GL.DEPTH_CLEAR_VALUE]: 1,\n  [GL.DEPTH_FUNC]: GL.LESS,\n  [GL.DEPTH_RANGE]: new Float32Array([0, 1]), // TBD\n  [GL.DEPTH_WRITEMASK]: true,\n  [GL.DITHER]: true,\n  [GL.FRONT_FACE]: GL.CCW,\n  [GL.GENERATE_MIPMAP_HINT]: GL.DONT_CARE,\n  [GL.LINE_WIDTH]: 1,\n  [GL.POLYGON_OFFSET_FILL]: false,\n  [GL.POLYGON_OFFSET_FACTOR]: 0,\n  [GL.POLYGON_OFFSET_UNITS]: 0,\n  [GL.SAMPLE_COVERAGE_VALUE]: 1.0,\n  [GL.SAMPLE_COVERAGE_INVERT]: false,\n  [GL.SCISSOR_TEST]: false,\n  // Note: Dynamic value. If scissor test enabled we expect users to set correct scissor box\n  [GL.SCISSOR_BOX]: new Int32Array([0, 0, 1024, 1024]),\n  [GL.STENCIL_TEST]: false,\n  [GL.STENCIL_CLEAR_VALUE]: 0,\n  [GL.STENCIL_WRITEMASK]: 0xFFFFFFFF,\n  [GL.STENCIL_BACK_WRITEMASK]: 0xFFFFFFFF,\n  [GL.STENCIL_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_REF]: 0,\n  [GL.STENCIL_VALUE_MASK]: 0xFFFFFFFF,\n  [GL.STENCIL_BACK_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_BACK_REF]: 0,\n  [GL.STENCIL_BACK_VALUE_MASK]: 0xFFFFFFFF,\n  [GL.STENCIL_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_PASS]: GL.KEEP,\n  [GL.STENCIL_BACK_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: GL.KEEP,\n  // Dynamic value: We use [0, 0, 1024, 1024] as default, but usually this is updated in each frame.\n  [GL.VIEWPORT]: new Int32Array([0, 0, 1024, 1024]),\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: 4,\n  [GL.UNPACK_ALIGNMENT]: 4,\n  [GL.UNPACK_FLIP_Y_WEBGL]: false,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: false,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: GL.BROWSER_DEFAULT_WEBGL,\n\n  // WEBGL2 / EXTENSIONS\n  // gl1: 'OES_standard_derivatives'\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: GL.DONT_CARE,\n  [GL.RASTERIZER_DISCARD]: false,\n  [GL.PACK_ROW_LENGTH]: 0,\n  [GL.PACK_SKIP_PIXELS]: 0,\n  [GL.PACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_ROW_LENGTH]: 0,\n  [GL.UNPACK_IMAGE_HEIGHT]: 0,\n  [GL.UNPACK_SKIP_PIXELS]: 0,\n  [GL.UNPACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_SKIP_IMAGES]: 0\n};\n\n// SETTER TABLES - ENABLES SETTING ANY PARAMETER WITH A COMMON API\n\nconst enable = (gl, value, key) => value ? gl.enable(key) : gl.disable(key);\nconst hint = (gl, value, key) => gl.hint(key, value);\nconst pixelStorei = (gl, value, key) => gl.pixelStorei(key, value);\n\n// NOTE: When value type is a string, it will be handled by 'GL_PARAMETER_COMPOSITE_SETTERS'\n\nexport const GL_PARAMETER_SETTERS = {\n  [GL.BLEND]: enable,\n  [GL.BLEND_COLOR]: (gl, value) => gl.blendColor(...value),\n  [GL.BLEND_EQUATION_RGB]: 'blendEquation',\n  [GL.BLEND_EQUATION_ALPHA]: 'blendEquation',\n  [GL.BLEND_SRC_RGB]: 'blendFunc',\n  [GL.BLEND_DST_RGB]: 'blendFunc',\n  [GL.BLEND_SRC_ALPHA]: 'blendFunc',\n  [GL.BLEND_DST_ALPHA]: 'blendFunc',\n  [GL.COLOR_CLEAR_VALUE]: (gl, value) => gl.clearColor(...value),\n  [GL.COLOR_WRITEMASK]: (gl, value) => gl.colorMask(...value),\n  [GL.CULL_FACE]: enable,\n  [GL.CULL_FACE_MODE]: (gl, value) => gl.cullFace(value),\n  [GL.DEPTH_TEST]: enable,\n  [GL.DEPTH_CLEAR_VALUE]: (gl, value) => gl.clearDepth(value),\n  [GL.DEPTH_FUNC]: (gl, value) => gl.depthFunc(value),\n  [GL.DEPTH_RANGE]: (gl, value) => gl.depthRange(...value),\n  [GL.DEPTH_WRITEMASK]: (gl, value) => gl.depthMask(value),\n  [GL.DITHER]: enable,\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: hint,\n  [GL.FRONT_FACE]: (gl, value) => gl.frontFace(value),\n  [GL.GENERATE_MIPMAP_HINT]: hint,\n  [GL.LINE_WIDTH]: (gl, value) => gl.lineWidth(value),\n  [GL.POLYGON_OFFSET_FILL]: enable,\n  [GL.POLYGON_OFFSET_FACTOR]: 'polygonOffset',\n  [GL.POLYGON_OFFSET_UNITS]: 'polygonOffset',\n  [GL.RASTERIZER_DISCARD]: enable,\n  [GL.SAMPLE_COVERAGE_VALUE]: 'sampleCoverage',\n  [GL.SAMPLE_COVERAGE_INVERT]: 'sampleCoverage',\n  [GL.SCISSOR_TEST]: enable,\n  [GL.SCISSOR_BOX]: (gl, value) => gl.scissor(...value),\n  [GL.STENCIL_TEST]: enable,\n  [GL.STENCIL_CLEAR_VALUE]: (gl, value) => gl.clearStencil(value),\n  [GL.STENCIL_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.FRONT, value),\n  [GL.STENCIL_BACK_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.BACK, value),\n  [GL.STENCIL_FUNC]: 'stencilFuncFront',\n  [GL.STENCIL_REF]: 'stencilFuncFront',\n  [GL.STENCIL_VALUE_MASK]: 'stencilFuncFront',\n  [GL.STENCIL_BACK_FUNC]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_REF]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_VALUE_MASK]: 'stencilFuncBack',\n  [GL.STENCIL_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_PASS]: 'stencilOpFront',\n  [GL.STENCIL_BACK_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: 'stencilOpBack',\n  [GL.VIEWPORT]: (gl, value) => gl.viewport(...value),\n\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_FLIP_Y_WEBGL]: pixelStorei,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: pixelStorei,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: pixelStorei,\n\n  // WEBGL2 PIXEL PACK/UNPACK MODES\n  // RASTERIZER_DISCARD ...\n  [GL.PACK_ROW_LENGTH]: pixelStorei,\n  [GL.PACK_SKIP_PIXELS]: pixelStorei,\n  [GL.PACK_SKIP_ROWS]: pixelStorei,\n  [GL.UNPACK_ROW_LENGTH]: pixelStorei,\n  [GL.UNPACK_IMAGE_HEIGHT]: pixelStorei,\n  [GL.UNPACK_SKIP_PIXELS]: pixelStorei,\n  [GL.UNPACK_SKIP_ROWS]: pixelStorei,\n  [GL.UNPACK_SKIP_IMAGES]: pixelStorei\n};\n\nconst GL_PARAMETER_COMPOSITE_SETTERS = {\n  blendEquation: (gl, values) => gl.blendEquationSeparate(\n    values[GL.BLEND_EQUATION_RGB],\n    values[GL.BLEND_EQUATION_ALPHA]\n  ),\n  blendFunc: (gl, values) => gl.blendFuncSeparate(\n    values[GL.BLEND_SRC_RGB],\n    values[GL.BLEND_DST_RGB],\n    values[GL.BLEND_SRC_ALPHA],\n    values[GL.BLEND_DST_ALPHA]\n  ),\n  polygonOffset: (gl, values) => gl.polygonOffset(\n    values[GL.POLYGON_OFFSET_FACTOR],\n    values[GL.POLYGON_OFFSET_UNITS]\n  ),\n  sampleCoverage: (gl, values) => gl.sampleCoverage(\n    values[GL.SAMPLE_COVERAGE_VALUE],\n    values[GL.SAMPLE_COVERAGE_INVERT]\n  ),\n  stencilFuncFront: (gl, values) => gl.stencilFuncSeparate(GL.FRONT,\n    values[GL.STENCIL_FUNC],\n    values[GL.STENCIL_REF],\n    values[GL.STENCIL_VALUE_MASK]\n  ),\n  stencilFuncBack: (gl, values) => gl.stencilFuncSeparate(GL.BACK,\n    values[GL.STENCIL_BACK_FUNC],\n    values[GL.STENCIL_BACK_REF],\n    values[GL.STENCIL_BACK_VALUE_MASK]\n  ),\n  stencilOpFront: (gl, values) => gl.stencilOpSeparate(GL.FRONT,\n    values[GL.STENCIL_FAIL],\n    values[GL.STENCIL_PASS_DEPTH_FAIL],\n    values[GL.STENCIL_PASS_DEPTH_PASS]\n  ),\n  stencilOpBack: (gl, values) => gl.stencilOpSeparate(GL.BACK,\n    values[GL.STENCIL_BACK_FAIL],\n    values[GL.STENCIL_BACK_PASS_DEPTH_FAIL],\n    values[GL.STENCIL_BACK_PASS_DEPTH_PASS]\n  )\n};\n\n// GETTER TABLE - FOR READING OUT AN ENTIRE CONTEXT\n\nconst isEnabled = (gl, key) => gl.isEnabled(key);\n\n// Exceptions for any keys that cannot be queried by gl.getParameters\nexport const GL_PARAMETER_GETTERS = {\n  [GL.BLEND]: isEnabled,\n  [GL.CULL_FACE]: isEnabled,\n  [GL.DEPTH_TEST]: isEnabled,\n  [GL.DITHER]: isEnabled,\n  [GL.POLYGON_OFFSET_FILL]: isEnabled,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: isEnabled,\n  [GL.SAMPLE_COVERAGE]: isEnabled,\n  [GL.SCISSOR_TEST]: isEnabled,\n  [GL.STENCIL_TEST]: isEnabled,\n\n  // WebGL 2\n  [GL.RASTERIZER_DISCARD]: isEnabled\n};\n\n// PUBLIC METHODS\n\n// Sets any GL parameter regardless of function (gl.blendMode, ...)\n// Note: requires a `cache` object to be set on the context (gl.state.cache)\n// This object is used to fill in any missing values for composite setter functions\nexport function setParameters(gl, values) {\n  const compositeSetters = {};\n\n  // HANDLE PRIMITIVE SETTERS (and make note of any composite setters)\n\n  for (const key in values) {\n    const setter = GL_PARAMETER_SETTERS[key];\n    if (setter) {\n      // Composite setters should only be called once, so save them\n      if (typeof setter === 'string') {\n        compositeSetters[setter] = true;\n      // only call setter if value has changed\n      // TODO - deep equal on values?\n      } else {\n        // Note - the setter will automatically update this.state\n        setter(gl, values[key], Number(key));\n      }\n    }\n  }\n\n  // HANDLE COMPOSITE SETTERS\n\n  // NOTE: any non-provided values needed by composite setters are filled in from state cache\n  // The cache parameter is automatically retrieved from the context\n  // This depends on `trackContextState`, which is technically a \"circular\" dependency.\n  // But it is too inconvenient to always require a cache parameter here.\n  // This is the ONLY external dependency in this module/\n  const cache = gl.state && gl.state.cache;\n  if (cache) {\n    const mergedValues = Object.assign({}, cache, values);\n\n    for (const key in compositeSetters) {\n      // TODO - avoid calling composite setters if values have not changed.\n      const compositeSetter = GL_PARAMETER_COMPOSITE_SETTERS[key];\n      // Note - if `trackContextState` has been called,\n      // the setter will automatically update this.state.cache\n      compositeSetter(gl, mergedValues);\n    }\n  }\n  // Add a log for the else case?\n}\n\n// Queries any single GL parameter regardless of function (gl.getParameter/gl.isEnabled...)\nexport function getParameter(gl, key) {\n  const getter = GL_PARAMETER_GETTERS[key];\n  return getter ? getter(gl, Number(key)) : gl.getParameter(Number(key));\n}\n\n// Copies the state from a context (gl.getParameter should not be overriden)\n// Reads the entire WebGL state from a context\n// Caveat: This generates a huge amount of synchronous driver roundtrips and should be\n// considered a very slow operation, to be used only if/when a context already manipulated\n// by external code needs to be synchronized for the first time\n// @return {Object} - a newly created map, with values keyed by GL parameters\nexport function getParameters(gl, parameters) {\n  // default to querying all parameters\n  parameters = parameters || GL_PARAMETER_DEFAULTS;\n  // support both arrays of parameters and objects (keys represent parameters)\n  const parameterKeys = Array.isArray(parameters) ? parameters : Object.keys(parameters);\n\n  const state = {};\n  for (const key of parameterKeys) {\n    state[key] = getParameter(gl, key);\n  }\n  return state;\n}\n\nexport function getDefaultParameters(gl) {\n  // TODO - Query GL.VIEWPORT and GL.SCISSOR_BOX since these are dynamic\n  return Object.assign({}, GL_PARAMETER_DEFAULTS, {\n    // TODO: For viewport and scissor default values are set at the time of\n    // context creation based on canvas size, we can query them here but it will\n    // not match with what we have in GL_PARAMETER_DEFAULTS table, we should revisit.\n    // [GL.VIEWPORT]: gl.constructor.prototype.getParameter.call(gl, GL.VIEWPORT),\n    // [GL.SCISSOR_BOX]: gl.constructor.prototype.getParameter.call(gl, GL.SCISSOR_BOX)\n  });\n}\n\nexport function resetParameters(gl) {\n  setParameters(gl, getDefaultParameters(gl));\n}\n"]}