{"version":3,"sources":["../../src/webgl-utils/track-context-state.js"],"names":["GL","setParameters","getParameters","GL_PARAMETER_DEFAULTS","polyfillContext","assert","clone","Array","isArray","x","ArrayBuffer","isView","slice","deepEqual","y","isArrayX","isArrayY","length","i","GL_STATE_SETTERS","enable","setter","cap","disable","pixelStorei","pname","param","hint","clearStencil","s","STENCIL_CLEAR_VALUE","blendColor","r","g","b","a","BLEND_COLOR","Float32Array","blendEquation","mode","BLEND_EQUATION_RGB","BLEND_EQUATION_ALPHA","blendEquationSeparate","modeRGB","modeAlpha","blendFunc","src","dst","BLEND_SRC_RGB","BLEND_DST_RGB","BLEND_SRC_ALPHA","BLEND_DST_ALPHA","blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","clearColor","COLOR_CLEAR_VALUE","clearDepth","depth","DEPTH_CLEAR_VALUE","colorMask","COLOR_WRITEMASK","cullFace","CULL_FACE_MODE","depthFunc","func","DEPTH_FUNC","depthRange","zNear","zFar","DEPTH_RANGE","depthMask","mask","DEPTH_WRITEMASK","frontFace","face","FRONT_FACE","lineWidth","width","LINE_WIDTH","polygonOffset","factor","units","POLYGON_OFFSET_FACTOR","POLYGON_OFFSET_UNITS","sampleCoverage","value","invert","SAMPLE_COVERAGE_VALUE","SAMPLE_COVERAGE_INVERT","scissor","height","SCISSOR_BOX","Int32Array","stencilMask","STENCIL_WRITEMASK","STENCIL_BACK_WRITEMASK","stencilMaskSeparate","FRONT","stencilFunc","ref","STENCIL_FUNC","STENCIL_REF","STENCIL_VALUE_MASK","STENCIL_BACK_FUNC","STENCIL_BACK_REF","STENCIL_BACK_VALUE_MASK","stencilFuncSeparate","stencilOp","fail","zfail","zpass","STENCIL_FAIL","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_BACK_FAIL","STENCIL_BACK_PASS_DEPTH_FAIL","STENCIL_BACK_PASS_DEPTH_PASS","stencilOpSeparate","viewport","VIEWPORT","installGetterOverride","gl","functionName","originalGetterFunc","bind","state","cache","Object","defineProperty","configurable","installSetterSpy","updateCache","originalSetterFunc","params","valueChanged","log","GLState","copyState","stateStack","assign","_updateCache","seal","values","push","oldValues","pop","key","undefined","trackContextState","pushContextState","popContextState"],"mappings":"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","file":"track-context-state.js","sourcesContent":["// Support for listening to context state changes and intercepting state queries\n//\n// NOTE: this system does not handle buffer bindings\nimport GL from './constants';\nimport {setParameters, getParameters, GL_PARAMETER_DEFAULTS} from './set-parameters';\nimport polyfillContext from './polyfill-context';\nimport assert from 'assert';\n\nexport const clone = x => {\n  return Array.isArray(x) || ArrayBuffer.isView(x) ? x.slice() : x;\n};\n\nexport const deepEqual = (x, y) => {\n  const isArrayX = Array.isArray(x) || ArrayBuffer.isView(x);\n  const isArrayY = Array.isArray(y) || ArrayBuffer.isView(y);\n  if (isArrayX && isArrayY && x.length === y.length) {\n    for (let i = 0; i < x.length; ++i) {\n      if (x[i] !== y[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return x === y;\n};\n\n// interceptors for WEBGL FUNCTIONS that set WebGLRenderingContext state\n\nexport const GL_STATE_SETTERS = {\n\n  // GENERIC SETTERS\n\n  enable: (setter, cap) => setter({\n    [cap]: true\n  }),\n  disable: (setter, cap) => setter({\n    [cap]: false}\n  ),\n  pixelStorei: (setter, pname, param) => setter({\n    [pname]: param\n  }),\n  hint: (setter, pname, hint) => setter({\n    [pname]: hint\n  }),\n\n  // SPECIFIC SETTERS\n\n  clearStencil: (setter, s) => setter({\n    [GL.STENCIL_CLEAR_VALUE]: s}\n  ),\n\n  blendColor: (setter, r, g, b, a) => setter({\n    [GL.BLEND_COLOR]: new Float32Array([r, g, b, a])}\n  ),\n\n  blendEquation: (setter, mode) => setter({\n    [GL.BLEND_EQUATION_RGB]: mode,\n    [GL.BLEND_EQUATION_ALPHA]: mode\n  }),\n\n  blendEquationSeparate: (setter, modeRGB, modeAlpha) => setter({\n    [GL.BLEND_EQUATION_RGB]: modeRGB,\n    [GL.BLEND_EQUATION_ALPHA]: modeAlpha\n  }),\n\n  blendFunc: (setter, src, dst) => setter({\n    [GL.BLEND_SRC_RGB]: src,\n    [GL.BLEND_DST_RGB]: dst,\n    [GL.BLEND_SRC_ALPHA]: src,\n    [GL.BLEND_DST_ALPHA]: dst\n  }),\n\n  blendFuncSeparate: (setter, srcRGB, dstRGB, srcAlpha, dstAlpha) => setter({\n    [GL.BLEND_SRC_RGB]: srcRGB,\n    [GL.BLEND_DST_RGB]: dstRGB,\n    [GL.BLEND_SRC_ALPHA]: srcAlpha,\n    [GL.BLEND_DST_ALPHA]: dstAlpha\n  }),\n\n  clearColor: (setter, r, g, b, a) => setter({\n    [GL.COLOR_CLEAR_VALUE]: new Float32Array([r, g, b, a])\n  }),\n\n  clearDepth: (setter, depth) => setter({\n    [GL.DEPTH_CLEAR_VALUE]: depth\n  }),\n\n  colorMask: (setter, r, g, b, a) => setter({\n    [GL.COLOR_WRITEMASK]: [r, g, b, a]\n  }),\n\n  cullFace: (setter, mode) => setter({\n    [GL.CULL_FACE_MODE]: mode\n  }),\n\n  depthFunc: (setter, func) => setter({\n    [GL.DEPTH_FUNC]: func\n  }),\n\n  depthRange: (setter, zNear, zFar) => setter({\n    [GL.DEPTH_RANGE]: new Float32Array([zNear, zFar])\n  }),\n\n  depthMask: (setter, mask) => setter({\n    [GL.DEPTH_WRITEMASK]: mask\n  }),\n\n  frontFace: (setter, face) => setter({\n    [GL.FRONT_FACE]: face\n  }),\n\n  lineWidth: (setter, width) => setter({\n    [GL.LINE_WIDTH]: width\n  }),\n\n  polygonOffset: (setter, factor, units) => setter({\n    [GL.POLYGON_OFFSET_FACTOR]: factor,\n    [GL.POLYGON_OFFSET_UNITS]: units\n  }),\n\n  sampleCoverage: (setter, value, invert) => setter({\n    [GL.SAMPLE_COVERAGE_VALUE]: value,\n    [GL.SAMPLE_COVERAGE_INVERT]: invert\n  }),\n\n  scissor: (setter, x, y, width, height) => setter({\n    [GL.SCISSOR_BOX]: new Int32Array([x, y, width, height])\n  }),\n\n  stencilMask: (setter, mask) => setter({\n    [GL.STENCIL_WRITEMASK]: mask,\n    [GL.STENCIL_BACK_WRITEMASK]: mask\n  }),\n\n  stencilMaskSeparate: (setter, face, mask) => setter({\n    [face === GL.FRONT ? GL.STENCIL_WRITEMASK : GL.STENCIL_BACK_WRITEMASK]: mask\n  }),\n\n  stencilFunc: (setter, func, ref, mask) => setter({\n    [GL.STENCIL_FUNC]: func,\n    [GL.STENCIL_REF]: ref,\n    [GL.STENCIL_VALUE_MASK]: mask,\n    [GL.STENCIL_BACK_FUNC]: func,\n    [GL.STENCIL_BACK_REF]: ref,\n    [GL.STENCIL_BACK_VALUE_MASK]: mask\n  }),\n\n  stencilFuncSeparate: (setter, face, func, ref, mask) => setter({\n    [face === GL.FRONT ? GL.STENCIL_FUNC : GL.STENCIL_BACK_FUNC]: func,\n    [face === GL.FRONT ? GL.STENCIL_REF : GL.STENCIL_BACK_REF]: ref,\n    [face === GL.FRONT ? GL.STENCIL_VALUE_MASK : GL.STENCIL_BACK_VALUE_MASK]: mask\n  }),\n\n  stencilOp: (setter, fail, zfail, zpass) => setter({\n    [GL.STENCIL_FAIL]: fail,\n    [GL.STENCIL_PASS_DEPTH_FAIL]: zfail,\n    [GL.STENCIL_PASS_DEPTH_PASS]: zpass,\n    [GL.STENCIL_BACK_FAIL]: fail,\n    [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n    [GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n  }),\n\n  stencilOpSeparate: (setter, face, fail, zfail, zpass) => setter({\n    [face === GL.FRONT ? GL.STENCIL_FAIL : GL.STENCIL_BACK_FAIL]: fail,\n    [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_FAIL : GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n    [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_PASS : GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n  }),\n\n  viewport: (setter, x, y, width, height) => setter({\n    [GL.VIEWPORT]: new Int32Array([x, y, width, height])\n  })\n};\n\n// HELPER FUNCTIONS - INSTALL GET/SET INTERCEPTORS (SPYS) ON THE CONTEXT\n\n// Overrides a WebGLRenderingContext state \"getter\" function\n// to return values directly from cache\nfunction installGetterOverride(gl, functionName) {\n  // Get the original function from the WebGLRenderingContext\n  const originalGetterFunc = gl[functionName].bind(gl);\n\n  // Wrap it with a spy so that we can update our state cache when it gets called\n  gl[functionName] = function(...params) {\n    const pname = params[0];\n\n    // WebGL limits are not prepopulated in the cache, we must\n    // query first time. They are all primitive (single value)\n    if (!(pname in gl.state.cache)) {\n      gl.state.cache[pname] = originalGetterFunc(...params);\n    }\n\n    // Optionally call the original function to do a \"hard\" query from the WebGLRenderingContext\n    return gl.state.enable ?\n      // Call the getter the params so that it can e.g. serve from a cache\n      gl.state.cache[pname] :\n      // Optionally call the original function to do a \"hard\" query from the WebGLRenderingContext\n      originalGetterFunc(...params);\n  };\n\n  // Set the name of this anonymous function to help in debugging and profiling\n  Object.defineProperty(\n    gl[functionName], 'name', {value: `${functionName}-from-cache`, configurable: false});\n}\n\n// Overrides a WebGLRenderingContext state \"setter\" function\n// to call a setter spy before the actual setter. Allows us to keep a cache\n// updated with a copy of the WebGL context state.\nfunction installSetterSpy(gl, functionName, setter, updateCache) {\n  // Get the original function from the WebGLRenderingContext\n  const originalSetterFunc = gl[functionName].bind(gl);\n\n  // Wrap it with a spy so that we can update our state cache when it gets called\n  gl[functionName] = function(...params) {\n    // Update the value\n    // Call the setter with the state cache and the params so that it can store the parameters\n    const valueChanged = setter(updateCache, ...params);\n\n    // Call the original WebGLRenderingContext func to make sure the context actually gets updated\n    if (valueChanged) {\n      gl.state.log(`gl.${functionName}`, ...params); // eslint-disable-line\n      originalSetterFunc(...params);\n    }\n    // Note: if the original function fails to set the value, our state cache will be bad\n    // No solution for this at the moment, but assuming that this is unlikely to be a real problem\n    // We could call the setter after the originalSetterFunc. Concern is that this would\n    // cause different behavior in debug mode, where originalSetterFunc can throw exceptions\n  };\n\n  // Set the name of this anonymous function to help in debugging and profiling\n  Object.defineProperty(\n    gl[functionName], 'name', {value: `${functionName}-to-cache`, configurable: false});\n}\n\n// HELPER CLASS - GLState\n\n/* eslint-disable no-shadow */\nclass GLState {\n  constructor(gl, {\n    copyState = false, // Copy cache from params (slow) or initialize from WebGL defaults (fast)\n    log = () => {} // Logging function, called when gl parameter change calls are actually issued\n  } = {}) {\n    this.gl = gl;\n    this.stateStack = [];\n    this.enable = true;\n    this.cache = copyState ? getParameters(gl) : Object.assign({}, GL_PARAMETER_DEFAULTS);\n    this.log = log;\n\n    this._updateCache = this._updateCache.bind(this);\n    Object.seal(this);\n  }\n\n  push(values = {}) {\n    this.stateStack.push({});\n  }\n\n  pop() {\n    assert(this.stateStack.length > 0);\n    // Use the saved values in the state stack to restore parameters\n    const oldValues = this.stateStack[this.stateStack.length - 1];\n    setParameters(this.gl, oldValues, this.cache);\n    // Don't pop until we have reset parameters (to make sure other \"stack frames\" are not affected)\n    this.stateStack.pop();\n  }\n\n  // interceptor for context set functions - update our cache and our stack\n  // values (Object) - the key values for this setter\n  _updateCache(values) {\n    let valueChanged = false;\n\n    const oldValues = this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1];\n\n    for (const key in values) {\n      assert(key !== undefined);\n      // Check that value hasn't already been shadowed\n      if (!deepEqual(values[key], this.cache[key])) {\n        valueChanged = true;\n\n        // First, save current value being shadowed\n        // If a state stack frame is active, save the current parameter values for pop\n        // but first check that value hasn't already been shadowed and saved\n        if (oldValues && !(key in oldValues)) {\n          oldValues[key] = this.cache[key];\n        }\n\n        // Save current value being shadowed\n        this.cache[key] = values[key];\n      }\n    }\n\n    return valueChanged;\n  }\n}\n\n// PUBLIC API\n\n/**\n * Initialize WebGL state caching on a context\n * can be called multiple times to enable/disable\n * @param {WebGLRenderingContext} - context\n */\n// After calling this function, context state will be cached\n// gl.state.push() and gl.state.pop() will be available for saving,\n// temporarily modifying, and then restoring state.\nexport default function trackContextState(gl, {enable = true, copyState} = {}) {\n  assert(copyState !== undefined);\n  if (!gl.state) {\n    polyfillContext(gl);\n\n    // Create a state cache\n    gl.state = new GLState(gl, {copyState, enable});\n\n    // intercept all setter functions in the table\n    for (const key in GL_STATE_SETTERS) {\n      const setter = GL_STATE_SETTERS[key];\n      installSetterSpy(gl, key, setter, gl.state._updateCache);\n    }\n\n    // intercept all getter functions in the table\n    installGetterOverride(gl, 'getParameter');\n    installGetterOverride(gl, 'isEnabled');\n  }\n\n  gl.state.enable = enable;\n\n  return gl;\n}\n\nexport function pushContextState(gl) {\n  assert(gl.state);\n  gl.state.push();\n}\n\nexport function popContextState(gl) {\n  assert(gl.state);\n  gl.state.pop();\n}\n"]}